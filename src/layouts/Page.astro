---
import type { MarkdownHeading } from 'astro'
import config from 'virtual:starlight/user-config'

// Built-in CSS styles.
import '@astrojs/starlight/style/props.css'
import '@astrojs/starlight/style/reset.css'
import '@astrojs/starlight/style/shiki.css'
import '@astrojs/starlight/style/util.css'

// Components â€” can override built-in CSS, but not user CSS.
import ContentPanel from '@astrojs/starlight/components/ContentPanel.astro'
import FallbackContentNotice from '@astrojs/starlight/components/FallbackContentNotice.astro'
import Header from '@astrojs/starlight/components/Header.astro'
import MarkdownContent from '@astrojs/starlight/components/MarkdownContent.astro'
import RightSidebar from '@astrojs/starlight/components/RightSidebar.astro'
import Sidebar from '@astrojs/starlight/components/Sidebar.astro'
import SkipLink from '@astrojs/starlight/components/SkipLink.astro'
import ThemeProvider from '@astrojs/starlight/components/ThemeProvider.astro'
import PageFrame from '@astrojs/starlight/layout/PageFrame.astro'
import TwoColumnContent from '@astrojs/starlight/layout/TwoColumnContent.astro'

import MarkdownMeta from '../components/MarkdownMeta.astro'

// Remark component CSS (needs to override `MarkdownContent.astro`)
import '@astrojs/starlight/style/asides.css'

// Important that this is the last import so it can override built-in styles.
import { getCollection } from 'astro:content'
import 'virtual:starlight/user-css'
import Footer from '../components/Footer.astro'
import HeadSEO from '../components/HeadSEO.astro'
import type { DocTemplates, collections } from '../content/config'
import type { HeadConfig } from '../starlight/schemas/head'
import type { TableOfContents } from '../starlight/schemas/tableOfContents'
import { getSidebar } from '../starlight/utils/navigation'
import type { LocaleData } from '../starlight/utils/slugs'

interface Props {
  id: string
  slug: string
  title: string
  editUrl: string
  localeData: LocaleData
  head: HeadConfig
  tableOfContents?: TableOfContents
  template?: DocTemplates
  isFallback?: true
  collection: keyof typeof collections

  headings: MarkdownHeading[]
  /** Which frontmatter properties should be rendered in the page */
  metaProperties: Array<{ key: string; header?: string }>
}

const {
  slug,
  head,
  title,
  collection,
  localeData: { locale, dir, lang },
  headings,
  isFallback,
  editUrl,
  metaProperties,
  tableOfContents,

  template,
} = Astro.props
const collectionContent = await getCollection(collection)
const sidebar = getSidebar(collectionContent, Astro.url.pathname, locale)

const hasSidebar = template !== 'splash'
const tocConfig = !hasSidebar
  ? false
  : tableOfContents !== undefined
  ? tableOfContents
  : config.tableOfContents
const hasToC = Boolean(tocConfig)
---

<html {lang} {dir} data-has-toc={hasToC} data-has-sidebar={hasSidebar}>
  <head>
    <HeadSEO title={title} head={head} lang={lang} />
    <style>
      html:not([data-has-toc]) {
        --sl-mobile-toc-height: 0rem;
      }
      html:not([data-has-sidebar]) {
        --sl-content-width: 67.5rem;
      }
      /* Add scroll padding to ensure anchor headings aren't obscured by nav */
      html {
        /* Additional padding is needed to account for the mobile TOC */
        scroll-padding-top: calc(
          1.5rem + var(--sl-nav-height) + var(--sl-mobile-toc-height)
        );
      }
      main {
        padding-bottom: 3vh;
      }
      @media (min-width: 50em) {
        [data-has-sidebar] {
          --sl-content-inline-start: var(--sl-sidebar-width);
        }
      }
      @media (min-width: 72em) {
        html {
          scroll-padding-top: calc(1.5rem + var(--sl-nav-height));
        }
      }
    </style>
  </head>
  <body>
    <ThemeProvider />
    <SkipLink locale={locale} />
    <PageFrame locale={locale} hasSidebar={hasSidebar}>
      <Header slot="header" locale={locale} />
      {
        hasSidebar && (
          <Sidebar slot="sidebar" sidebar={sidebar} locale={locale} />
        )
      }
      <TwoColumnContent {hasToC}>
        <RightSidebar
          slot="right-sidebar"
          headings={headings}
          locale={locale}
          {tocConfig}
        />
        <main data-pagefind-body={slug !== '404'} lang={lang} dir={dir}>
          <ContentPanel>
            <h1
              id="_top"
              data-page-title
              style="font-size: var(--sl-text-h1); line-height: var(--sl-line-height-headings); font-weight: 600; color: var(--sl-color-white); margin-top: 1rem;"
            >
              {title}
            </h1>
            {isFallback && <FallbackContentNotice locale={locale} />}
          </ContentPanel>
          <ContentPanel>
            <MarkdownContent>
              <MarkdownMeta entryMeta={{}} metaProperties={[]} />
              <slot />
            </MarkdownContent>
            <Footer
              slug={slug}
              editUrl={editUrl}
              dir={dir}
              lang={lang}
              locale={locale}
              sidebar={sidebar}
            />
          </ContentPanel>
        </main>
      </TwoColumnContent>
    </PageFrame>
  </body>
</html>
